.freezedeployment:
  stage: deploy
  before_script:
    - '[[ ! -z "$CI_DEPLOY_FREEZE" ]] && echo "INFRASTRUCTURE OUTAGE WINDOW" && exit 1; '
  rules:
    - if: '$CI_DEPLOY_FREEZE'
      when: manual
      allow_failure: true
    - when: on_success

.pre_deployment:
  variables:
    CLOUDFLARE_ACCOUNT_ID: $CLOUDFLARE_ACCOUNT_ID
    CLOUDFLARE_API_TOKEN: $CLOUDFLARE_API_TOKEN
  extends: .freezedeployment
  image: ${CI_REGISTRY}/ict/images/alpine/ci:3.18
  cache:
    paths:
      - node_modules/
  before_script:
    - apk add --no-cache nodejs npm
    - echo "\e[33mInstalling dependencies...\e[0m"
    - npm ci
    - npm install --global wrangler --unsafe-perm=true
    - echo "\e[34m\e[4mDeploying...\e[24m\e[0m"
  dependencies:
    - build


deployment_main:
  extends: .pre_deployment
  script:
    - wrangler pages deploy $MAIN_APP_DIST --project-name=3dwebprodconf --branch=production
  environment:
    name: staging_main
    url: $CLOUDFLARE_DEPLOY_MAIN_URL

deployment_admin:
  extends: .pre_deployment
  script:
    - wrangler pages deploy $ADMIN_APP_DIST --project-name=3dwebprodconf-admin --branch=production
  environment:
    name: staging_admin
    url: $CLOUDFLARE_DEPLOY_ADMIN_URL